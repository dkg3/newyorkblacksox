{"version":3,"sources":["components/Stats/PhotosVideos.js","pages/Photos.js","data/stats/site.js"],"names":["PUBLIC_URL","process","Stats","useState","initialData","data","setResponseData","fetchData","useCallback","a","fetch","res","json","resData","map","field","value","Object","keys","includes","key","useEffect","console","log","className","src","style","width","alt","Main","title","description","id","PhotosVideos","label","link","format","x","dayjs"],"mappings":"sMAIQA,EAAeC,mBAsDRC,EApDD,WACZ,MAAgCC,mBAASC,KAAzC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAYC,sBAAW,sBAAC,8BAAAC,EAAA,sEAEVC,MAChB,wDAH0B,cAEtBC,EAFsB,gBAKNA,EAAIC,OALE,OAKtBC,EALsB,OAM5BP,EACEF,IAAYU,KAAI,SAACC,GAAD,mBAAC,eACZA,GADW,IAGdC,MAAOC,OAAOC,KAAKL,GAASM,SAASJ,EAAMK,KACvCP,EAAQE,EAAMK,KACdL,EAAMC,YAZc,2CAe3B,IAQH,OANAK,qBAAU,WACRd,MACC,CAACA,IAGJe,QAAQC,IAAIlB,GAEV,sBAAKmB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKC,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,QAE3E,sBAAKJ,UAAU,SAAf,UACE,qBAAKC,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,QAE3E,sBAAKJ,UAAU,SAAf,UACE,qBAAKC,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,QAE3E,sBAAKJ,UAAU,SAAf,UACE,qBAAKC,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,KACzE,qBAAKH,IAAG,UAAKzB,EAAL,oBAAmC0B,MAAO,CAAEC,MAAO,QAAUC,IAAI,YC9BlE1B,UAhBD,kBACZ,cAAC2B,EAAA,EAAD,CACEC,MAAM,QACNC,YAAY,uCAFd,SAIE,0BAASP,UAAU,OAAOQ,GAAG,QAA7B,UACE,iCACE,qBAAKR,UAAU,QAAf,SACE,oBAAI,cAAY,UAAhB,oCAGJ,cAACS,EAAD,W,gCCjBN,qBAMM5B,EAAO,CACX,CACE6B,MAAO,sCACPd,IAAK,mBACLe,KAAM,yDAER,CACED,MAAO,4CACPd,IAAK,oBACLe,KAAM,yDAER,CACED,MAAO,kBACPd,IAAK,QACLe,KAAM,sDAER,CACED,MAAO,mBACPlB,MAAO,KAET,CACEkB,MAAO,4BACPlB,MAAO,KAET,CACEkB,MAAO,qBACPd,IAAK,oBACLe,KAAM,qDAER,CACED,MAAO,kBACPd,IAAK,YACLe,KAAM,qDACNC,OAAQ,SAACC,GAAD,OAAOC,IAAMD,GAAGD,OAAO,mBAEjC,CAIEF,MAAO,4CACPlB,MAAO,OACPmB,KAAM,mEAIK9B","file":"static/js/6.cf52666b.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nimport initialData from '../../data/stats/site';\n\nconst { PUBLIC_URL } = process.env;\n\nconst Stats = () => {\n  const [data, setResponseData] = useState(initialData);\n  // TODO think about persisting this somewhere\n  const fetchData = useCallback(async () => {\n    // request must be authenticated if private\n    const res = await fetch(\n      'https://api.github.com/repos/mldangelo/personal-site',\n    );\n    const resData = await res.json();\n    setResponseData(\n      initialData.map((field) => ({\n        ...field,\n        // update value if value was returned by call to github\n        value: Object.keys(resData).includes(field.key)\n          ? resData[field.key]\n          : field.value,\n      })),\n    );\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // eslint-disable-next-line no-console\n  console.log(data);\n  return (\n    <div className=\"row\">\n      <div className=\"column\">\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n      </div>\n      <div className=\"column\">\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n      </div>\n      <div className=\"column\">\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n      </div>\n      <div className=\"column\">\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n        <img src={`${PUBLIC_URL}/images/team.png`} style={{ width: '100%' }} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\n\nimport Main from '../layouts/Main';\n\nimport PhotosVideos from '../components/Stats/PhotosVideos';\n\nconst Stats = () => (\n  <Main\n    title=\"Stats\"\n    description=\"Stats Page for the New York Blacksox\"\n  >\n    <article className=\"post\" id=\"stats\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">Team Photos/Videos</h2>\n        </div>\n      </header>\n      <PhotosVideos />\n    </article>\n  </Main>\n);\n\nexport default Stats;\n","import dayjs from 'dayjs';\n\n/* Keys match keys returned by the github api. Fields without keys are\n * mostly jokes. To see everything returned by the github api, run:\n curl https://api.github.com/repos/mldangelo/personal-site\n */\nconst data = [\n  {\n    label: 'Stars this repository has on github',\n    key: 'stargazers_count',\n    link: 'https://github.com/mldangelo/personal-site/stargazers',\n  },\n  {\n    label: 'Number of people watching this repository',\n    key: 'subscribers_count',\n    link: 'https://github.com/mldangelo/personal-site/stargazers',\n  },\n  {\n    label: 'Number of forks',\n    key: 'forks',\n    link: 'https://github.com/mldangelo/personal-site/network',\n  },\n  {\n    label: 'Number of spoons',\n    value: '0',\n  },\n  {\n    label: 'Number of linter warnings',\n    value: '0', // enforced via github workflow\n  },\n  {\n    label: 'Open github issues',\n    key: 'open_issues_count',\n    link: 'https://github.com/mldangelo/personal-site/issues',\n  },\n  {\n    label: 'Last updated at',\n    key: 'pushed_at',\n    link: 'https://github.com/mldangelo/personal-site/commits',\n    format: (x) => dayjs(x).format('MMMM DD, YYYY'),\n  },\n  {\n    // TODO update this with a pre-commit hook\n    /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\n    xargs -I file cat file | wc -l */\n    label: 'Lines of Javascript powering this website',\n    value: '2115',\n    link: 'https://github.com/mldangelo/personal-site/graphs/contributors',\n  },\n];\n\nexport default data;\n"],"sourceRoot":""}